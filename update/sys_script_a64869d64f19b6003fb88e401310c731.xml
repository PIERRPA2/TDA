<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_novrp_nbd_tda_topic</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_novrp_nbd_tda_topic">sessionVALCHANGES^EQ<item endquery="false" field="session" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>NVS - Update Attendees</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	if(previous.session != current.session){
		removeGuests(previous);
	}
	
	if(current.session){
		addGuests(current);
	}
	
	function removeGuests(record){
		if(!record.session){
			return;
		}
		var session = record.session.getRefRecord();
		
		var topic = new GlideRecord("x_novrp_nbd_tda_topic");
		topic.addQuery("on_behalf_of", record.on_behalf_of);
		topic.addQuery("session", session.sys_id);
		topic.query();
		
		if(!topic.next()){
			if(session.attended_by.indexOf(record.on_behalf_of.sys_id) > -1){
				session.attended_by = session.attended_by.replace(record.on_behalf_of.sys_id, "");
			}
		}
				
		session.topics -= 1;
		session.update();
	}
	
	function addGuests(record){
		if(!record.session){
			return;
		}

		var session = record.session.getRefRecord();
		
		if(session.attended_by.indexOf(record.on_behalf_of.sys_id) == -1){
			session.attended_by += "," + record.on_behalf_of.sys_id;
		}
		
		session.topics += 1;
		session.update();
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>paul.galmot</sys_created_by>
        <sys_created_on>2017-03-06 16:48:56</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a64869d64f19b6003fb88e401310c731</sys_id>
        <sys_mod_count>32</sys_mod_count>
        <sys_name>NVS - Update Attendees</sys_name>
        <sys_overrides/>
        <sys_package display_value="Novartis Business Demand" source="x_novrp_nbd">c67fb93c4f41ba003fb88e401310c770</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Novartis Business Demand">c67fb93c4f41ba003fb88e401310c770</sys_scope>
        <sys_update_name>sys_script_a64869d64f19b6003fb88e401310c731</sys_update_name>
        <sys_updated_by>paul.galmot</sys_updated_by>
        <sys_updated_on>2017-03-08 12:19:45</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=a64869d64f19b6003fb88e401310c731"/>
</record_update>
